---
name: "Tests"
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
jobs:
  checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable cache for Nix
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Get GHC and Cabal versions, get store path
        id: setup
        run: |
          echo "ghc-version=$(nix develop --command ghc --numeric-version)"
          echo "cabal-version=$(nix develop --command cabal --numeric-version)"
          echo "cabal-store=${HOME}/.cabal/store"

      - name: Run Nix checks
        run: nix flake check

      - name: Get cabal index
        run: nix develop --command cabal update

      - name: Configure the build
        run: |
          nix develop --command cabal configure --enable-tests --enable-benchmarks --disable-documentation
          nix develop --command cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: nix develop --command cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: nix develop --command cabal build all

      - name: Run tests
        run: nix develop --command cabal test all

      - name: Check cabal file
        run: nix develop --command cabal check

      - name: Build documentation
        run: nix develop --command cabal haddock all
